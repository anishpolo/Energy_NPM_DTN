# Default settings for the simulation## Scenario settingsScenario.name = default_scenarioScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12hScenario.endTime = 2000## Interface-specific settings:# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 1000# Define 3 different node groupsScenario.nrofHostGroups = 1## Group-specific settings:# Common settings for all groupsGroup.movementModel = ShortestPathMapBasedMovementGroup.router = EnergyAwareRouterGroup.bufferSize = 5MGroup.waitTime = 0, 120## EnergyAwareRouter settingsGroup.intialEnergy = 10500Group.scanEnergy = 0.5Group.transmitEnergy = 1.0Group.energyWarmup = 10Group.scanInterval = 1# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 0.5, 1.5# Message TTL of 300 minutes (5 hours)Group.msgTtl = 300# group1 specific settingsGroup1.groupID = aGroup1.nrofHosts = 200Group1.activeTimes = 0, 5, 15, 20, 30, 35, 45, 50, 60, 65, 75, 80, 90, 95, 105, 110, 120, 125, 135, 140, 150, 155, 165, 170, 180, 185, 195, 200, 210, 215, 225, 230, 240, 245, 255, 260, 270, 275, 285, 290, 300, 305, 315, 320, 330, 335, 345, 350, 360, 365, 375, 380, 390, 395, 405, 410, 420, 425, 435, 440, 450, 455, 465, 470, 480, 485, 495, 500, 510, 515, 525, 530, 540, 545, 555, 560, 570, 575, 585, 590, 600, 605, 615, 620, 630, 635, 645, 650, 660, 665, 675, 680, 690, 695, 705, 710, 720, 725, 735, 740, 750, 755, 765, 770, 780, 785, 795, 800, 810, 815, 825, 830, 840, 845, 855, 860, 870, 875, 885, 890, 900, 905, 915, 920, 930, 935, 945, 950, 960, 965, 975, 980, 990, 995, 1005, 1010, 1020, 1025, 1035, 1040, 1050, 1055, 1065, 1070, 1080, 1085, 1095, 1100, 1110, 1115, 1125, 1130, 1140, 1145, 1155, 1160, 1170, 1175, 1185, 1190, 1200, 1205, 1215, 1220, 1230, 1235, 1245, 1250, 1260, 1265, 1275, 1280, 1290, 1295, 1305, 1310, 1320, 1325, 1335, 1340, 1350, 1355, 1365, 1370, 1380, 1385, 1395, 1400, 1410, 1415, 1425, 1430, 1440, 1445, 1455, 1460, 1470, 1475, 1485, 1490, 1500, 1505, 1515, 1520, 1530, 1535, 1545, 1550, 1560, 1565, 1575, 1580, 1590, 1595, 1605, 1610, 1620, 1625, 1635, 1640, 1650, 1655, 1665, 1670, 1680, 1685, 1695, 1700, 1710, 1715, 1725, 1730, 1740, 1745, 1755, 1760, 1770, 1775, 1785, 1790, 1800, 1805, 1815, 1820, 1830, 1835, 1845, 1850, 1860, 1865, 1875, 1880, 1890, 1895, 1905, 1910, 1920, 1925, 1935, 1940, 1950, 1955, 1965, 1970, 1980, 1985## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35# Message sizes (500kB - 1MB)Events1.size = 500k,1M# range of message source/destination addressesEvents1.hosts = 0,199# Message ID prefixEvents1.prefix = M## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt# how many reports to loadReport.nrofReports = 1# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = EnergyLevelReportReport.granularity = 500## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$