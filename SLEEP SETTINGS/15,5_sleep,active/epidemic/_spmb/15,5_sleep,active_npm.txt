# Default settings for the simulation## Scenario settingsScenario.name = default_scenarioScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12hScenario.endTime = 2000## Interface-specific settings:# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 1000# Define 3 different node groupsScenario.nrofHostGroups = 1## Group-specific settings:# Common settings for all groupsGroup.movementModel = ShortestPathMapBasedMovementGroup.router = EnergyAwareRouterGroup.bufferSize = 5MGroup.waitTime = 0, 120## EnergyAwareRouter settingsGroup.intialEnergy = 10500Group.scanEnergy = 0.5Group.transmitEnergy = 1.0Group.energyWarmup = 10Group.scanInterval = 1# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 0.5, 1.5# Message TTL of 300 minutes (5 hours)Group.msgTtl = 300# group1 specific settingsGroup1.groupID = aGroup1.nrofHosts = 200Group1.activeTimes = 0, 5, 20, 25, 40, 45, 60, 65, 80, 85, 100, 105, 120, 125, 140, 145, 160, 165, 180, 185, 200, 205, 220, 225, 240, 245, 260, 265, 280, 285, 300, 305, 320, 325, 340, 345, 360, 365, 380, 385, 400, 405, 420, 425, 440, 445, 460, 465, 480, 485, 500, 505, 520, 525, 540, 545, 560, 565, 580, 585, 600, 605, 620, 625, 640, 645, 660, 665, 680, 685, 700, 705, 720, 725, 740, 745, 760, 765, 780, 785, 800, 805, 820, 825, 840, 845, 860, 865, 880, 885, 900, 905, 920, 925, 940, 945, 960, 965, 980, 985, 1000, 1005, 1020, 1025, 1040, 1045, 1060, 1065, 1080, 1085, 1100, 1105, 1120, 1125, 1140, 1145, 1160, 1165, 1180, 1185, 1200, 1205, 1220, 1225, 1240, 1245, 1260, 1265, 1280, 1285, 1300, 1305, 1320, 1325, 1340, 1345, 1360, 1365, 1380, 1385, 1400, 1405, 1420, 1425, 1440, 1445, 1460, 1465, 1480, 1485, 1500, 1505, 1520, 1525, 1540, 1545, 1560, 1565, 1580, 1585, 1600, 1605, 1620, 1625, 1640, 1645, 1660, 1665, 1680, 1685, 1700, 1705, 1720, 1725, 1740, 1745, 1760, 1765, 1780, 1785, 1800, 1805, 1820, 1825, 1840, 1845, 1860, 1865, 1880, 1885, 1900, 1905, 1920, 1925, 1940, 1945, 1960, 1965, 1980, 1985## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35# Message sizes (500kB - 1MB)Events1.size = 500k,1M# range of message source/destination addressesEvents1.hosts = 0,199# Message ID prefixEvents1.prefix = M## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt# how many reports to loadReport.nrofReports = 1# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = MessageStatsReportReport.granularity = 500## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$